img.bg {
    /* Set rules to fill background */
    min-height: 100%;
    min-width: 1024px;

    /* Set up proportionate scaling */
    width: 100%;
    height: auto;

    /* Set up positioning */
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
}
.list {
    font-size: large;
}

@media screen and (max-width: 1024px) { /* Specific to this particular image */
    img.bg {
        left: 50%;
        margin-left: -512px;   /* 50% */
    }
}

.logo {
    width: 100%;
    height: 100%;
    padding-top:200px;
}
.number {
}
.logo img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    /*center vertically*/
    /*position: absolute;*/
    /*top: 50%;*/
    /*left: 50%;*/
    /*transform: translate(-50%, -50%);*/
    width: 35%;
}

#menu {
    background: black;
    opacity: 0.83;
    padding: 10px;
}

#menu ul {
    list-style-type: none;
    height: 40px;
    margin: 0px;
}

#menu li {
    float: left;
    width:25%;
    text-align: center;
    cursor: pointer;
    font-size: 30px;
    color: white;
}

.home {
   text-align: center;
    padding-top: 300px;
}

.line {
    display: inline-block;
    width: calc(50% - 66px);
    border: 1px solid black;
    margin: 0px 5px 0px 5px;
}

#content {
    margin-top: 50px;
    padding: 20px;
    clear: both;
    min-height: 400px;
}

.brick img {
    border: 4px solid white;
    margin: 0px;
}

@font-face {
    font-family: 'cocomat'; /*a name to be used later*/
    src: url('/fonts/Cocomat-Light.ttf'); /*URL to font*/
}

body {
    margin: 0;
    font-family: cocomat;
}
.content {
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    text-align: left;
    padding-bottom: 50px;
}
a {
    text-decoration: underline;
    color: #d4ccab;
    text: underline;
}
.annimate{
    HTML, BODY {
height: 100%;
}

$colors: #360745, #D61C59, #E7D84B, #EFEAC5, #1B8798;

BODY {
background: hsl(200,70,11);
background-size: .12em 100%;
font: 16em/1 Arial;
}

.text--line {
font-size: .5em;
}

svg {
position: absolute;
width: 100%;
height: 100%;
}

$max: 5;
$stroke-step: 7%;
.text-copy {
fill: none;
stroke: white;
stroke-dasharray: $stroke-step $stroke-step * ($max - 1);
stroke-width: 3px;

animation: stroke-offset 9s infinite linear;

@for $item from 1 through $max {
$stroke-color: nth($colors, $item);

&:nth-child(#{$item}) {
stroke: $stroke-color;
stroke-dashoffset: $stroke-step * $item;
}
}
}

@keyframes stroke-offset {
50% {
stroke-dashoffset: $stroke-step * $max;
stroke-dasharray: 0 $stroke-step * $max*2.5;
}
}


}